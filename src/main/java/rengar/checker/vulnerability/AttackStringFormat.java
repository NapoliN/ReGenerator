package rengar.checker.vulnerability;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.annotation.JSONField;

import rengar.checker.vulnerability.AttackStringFormat.PartialAttack;
import com.alibaba.fastjson.JSON;

public class AttackStringFormat {
    @JSONField(name = "attacks")
    private List<PartialAttack> attacks;
    @JSONField(name = "postfix")
    private String postifx;

    public String genString(){
        StringBuilder sb = new StringBuilder();
        for (PartialAttack item : attacks) {
            sb.append(item.getPrefix());
            String s = item.getPump().repeat(item.getCount());
            sb.append(s);
        }
        sb.append(postifx);
        return sb.toString();
    }

    public void setAttacks(List<PartialAttack> attacks) {
        this.attacks = attacks;
    }

    public List<PartialAttack> getAttacks() {
        return this.attacks;
    }

    public void setPostifx(String postifx) {
        this.postifx = postifx;
    }

    public String getPostifx() {
        return this.postifx;
    }

    public static class PartialAttack {
        @JSONField(name = "prefix")
        private String prefix;
        @JSONField(name = "pump")
        private String pump;
        @JSONField(name = "count")
        private int count;

         // Getters and Setters
         public String getPrefix() {
            return prefix;
        }

        public void setPrefix(String prefix) {
            this.prefix = prefix;
        }

        public String getPump() {
            return pump;
        }

        public void setPump(String pump) {
            this.pump = pump;
        }

        public int getCount() {
            return count;
        }

        public void setCount(int count) {
            this.count = count;
        }
    }

    public static AttackStringFormat fromJSONString(String jsonStr){
        var ret = JSON.parseObject(jsonStr, AttackStringFormat.class);
        return ret;
    }
}
